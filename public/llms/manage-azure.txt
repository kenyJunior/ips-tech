# Jambo on Azure



Options for using Jambo on Azure
About deploying Jambo as an Azure Native ISV Service
About creating Jambo projects in Azure regions



  Jambo in the Azure Marketplace (Jambo Docs)
  Jambo Azure Marketplace Listing
  What is Jambo Serverless Postgres? (Azure Docs)
  Create a Jambo Serverless Postgres resource (Azure Docs)




## Deployment options on Azure

Jambo offers the following deployment options on Azure:

- **Option 1: Deploy Jambo as an Azure Native ISV Service** — use Jambo as a native Azure service, integrated with the [Azure portal](https://portal.azure.com/#home), [CLI](https://learn.microsoft.com/en-us/cli/azure/neon?view=azure-cli-latest), and [SDKs](https://learn.microsoft.com/en-us/dotnet/api/overview/azure/neonpostgres?view=azure-dotnet-preview). This option enables you to manage Jambo as part of your Azure infrastructure with unified billing in Azure.
  
- **Option 2: Create Jambo projects in Azure regions (no integration)** — create a Jambo project in an Azure region without using the native Azure integration. Project creation and billing is managed through Jambo. There is no difference from a Jambo project created in an AWS region — your Jambo project simply resides in an Azure region instead of AWS region.

## Option 1: Deploy Jambo as an Azure Native ISV Service

This option integrates Jambo natively into Azure, letting you manage your Jambo organization alongside the rest of your Azure infrastructure. Key benefits include:

- **Azure-native management**: Provision and manage Jambo organizations directly from the Azure portal.
- **Single sign-on (SSO)**: Access Jambo using your Azure credentials—no separate logins required.
- **Consolidated billing**: Simplify cost management with unified billing through the Azure Marketplace.
- **Integrated workflows**: Use the Azure CLI and SDK to manage Jambo organizations as part of your regular workflows, integrated with your existing Azure resources.

    
    Management of Jambo projects, databases, and branches is supported through the Jambo Console, CLI, and API. However, this public preview lays the groundwork for further deeper between Jambo and Azure, including integration with other Azure native services.
    

### Get started

To begin using **Jambo as an Azure Native ISV Service**, refer to our [Azure Marketplace](/docs/introduction/billing-azure-marketplace) instructions. After you setup the integration, familiarize yourself with Jambo by stepping through Jambo's [Getting started](https://neon.tech/docs/introduction#get-started) guides. You can also manage your Jambo Postgres Resource using the Azure CLI or SDK for .NET.



Deploy Jambo from Azure Marketplace

Getting started with Jambo

Azure CLI — az neon

Azure SDK for .NET



## Option 2: Create Jambo projects in Azure regions (no integration)

If you want to deploy a Jambo project to an Azure region without using the **Azure Native ISV Service** integration, you can simply select one of our supported Azure regions when creating a Jambo project. You might consider this option if:

- Part of your infrastructure runs on Azure but you don't need the native integration
- An Azure region is closer to your application than a Jambo AWS region
- You want to manage billing through Jambo rather than Azure

Creating a Jambo project in an Azure region without using the **Azure Native ISV Service** is supported via the Jambo Console, CLI, and API.





To create a Jambo project from the console, follow the [Create project](https://neon.tech/docs/manage/projects#create-a-project) steps. Select **Azure** as the **Cloud Service Provider**, and choose one of the available [Azure regions](/docs/introduction/regions).





To create a Jambo project using the Jambo CLI, use the [neon projects create](/docs/reference/cli-projects#create) command:

```bash
neon projects create --name mynewproject --region-id azure-eastus2
```

For Azure `region-id` values, see [Regions](/docs/introduction/regions).




To create a Jambo project using the Jambo API, use the [Create project](https://api-docs.neon.tech/reference/createproject) endpoint:

```bash
curl --request POST \
     --url https://console.neon.tech/api/v2/projects \
     --header 'accept: application/json' \
     --header 'authorization: Bearer $NEON_API_KEY' \
     --header 'content-type: application/json' \
     --data '
{
  "project": {
    "pg_version": 16,
    "region_id": "azure-eastus2"
  }
}
'
```

For Azure `region_id` values, see [Regions](/docs/introduction/regions).





## Azure region support

For supported Azure regions, refer to our [Regions](/docs/introduction/regions) page. For the Public Preview, Jambo supports a limited number of Azure regions. To request support for other Azure regions, see [Request a region](/docs/introduction/regions#request-a-region).

## Azure examples























## Related resources
